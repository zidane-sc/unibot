generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model User {
  id        String        @id @default(uuid()) @db.Uuid
  phone     String?       @unique
  createdAt DateTime      @default(now())
  classes   ClassMember[]
  otps      OtpCode[]
}

model Class {
  id          String        @id @default(uuid()) @db.Uuid
  name        String?
  description String?
  groupJid    String?
  members     ClassMember[]
  schedules   Schedule[]
  assignments Assignment[]
  createdAt   DateTime      @default(now())
}

model ClassMember {
  id        String   @id @default(uuid()) @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  class     Class    @relation(fields: [classId], references: [id])
  classId   String   @db.Uuid
  role      String?
  createdAt DateTime @default(now())
}

model Schedule {
  id          String       @id @default(uuid()) @db.Uuid
  class       Class        @relation(fields: [classId], references: [id])
  classId     String       @db.Uuid
  title       String?
  description String?
  room        String?
  hints       String[]     @default([])
  dayOfWeek   Weekday
  startTime   String
  endTime     String
  createdAt   DateTime     @default(now())
  assignments Assignment[]
  groups      Group[]
}

model Assignment {
  id          String    @id @default(uuid()) @db.Uuid
  class       Class     @relation(fields: [classId], references: [id])
  classId     String    @db.Uuid
  schedule    Schedule? @relation(fields: [scheduleId], references: [id])
  scheduleId  String?   @db.Uuid
  title       String?
  description String?
  hints       String[]  @default([])
  dueAt       DateTime?
  createdAt   DateTime  @default(now())
}

model OtpCode {
  id        String    @id @default(uuid()) @db.Uuid
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.Uuid
  code      String
  expiresAt DateTime?
  createdAt DateTime  @default(now())
}

model Group {
  id         String        @id @default(uuid()) @db.Uuid
  name       String
  hints      String[]      @default([])
  schedule   Schedule?     @relation(fields: [scheduleId], references: [id])
  scheduleId String?       @db.Uuid
  members    GroupMember[]
  createdAt  DateTime      @default(now())
}

model GroupMember {
  id        String   @id @default(uuid()) @db.Uuid
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   String   @db.Uuid
  name      String
  phone     String?
  createdAt DateTime @default(now())
}
