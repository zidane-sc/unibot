generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model User {
  id         String        @id @default(uuid()) @db.Uuid
  phone      String?       @unique
  createdAt  DateTime      @default(now())
  classes    ClassMember[]
  otps       OtpCode[]
}

model Class {
  id          String        @id @default(uuid()) @db.Uuid
  name        String?
  description String?
  members     ClassMember[]
  schedules   Schedule[]
  assignments Assignment[]
  createdAt   DateTime      @default(now())
}

model ClassMember {
  id        String   @id @default(uuid()) @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String    @db.Uuid
  class     Class    @relation(fields: [classId], references: [id])
  classId   String    @db.Uuid
  role      String?
  createdAt DateTime @default(now())
}

model Schedule {
  id        String   @id @default(uuid()) @db.Uuid
  class     Class    @relation(fields: [classId], references: [id])
  classId   String    @db.Uuid
  title     String?
  description String?
  room      String?
  dayOfWeek Weekday
  startTime String
  endTime   String
  createdAt DateTime @default(now())
}

model Assignment {
  id          String   @id @default(uuid()) @db.Uuid
  class       Class    @relation(fields: [classId], references: [id])
  classId     String    @db.Uuid
  title       String?
  description String?
  dueAt       DateTime?
  createdAt   DateTime @default(now())
}

model OtpCode {
  id        String   @id @default(uuid()) @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String    @db.Uuid
  code      String
  expiresAt DateTime?
  createdAt DateTime @default(now())
}
